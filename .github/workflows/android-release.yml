name: 🚀 Android Release Build

# Запуск при push в main ветку
on:
  push:
    branches: [ main ]
  workflow_dispatch: # Позволяет запустить вручную

# Переменные окружения
env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4096m -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  build-and-release:
    name: 📱 Build & Release APK
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout исходного кода
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Полная история для версионности

      # 2. Настройка Java
      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Кэширование Gradle зависимостей
      - name: 📦 Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # 4. Права на выполнение для gradlew
      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew

      # 5. Очистка проекта
      - name: 🧹 Clean Project
        run: ./gradlew clean

      # 6. Сборка Release APK
      - name: 🔨 Build Release APK
        run: ./gradlew assembleRelease --stacktrace

      # 7. Подпись APK с debug keystore
      - name: ✍️ Sign APK with Debug Keystore
        run: |
          echo "📝 Signing APK with debug keystore..."
          # Создаем debug keystore если его нет
          if [ ! -f ~/.android/debug.keystore ]; then
            mkdir -p ~/.android
            keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi
          # Подписываем APK
          $ANDROID_HOME/build-tools/*/apksigner sign --ks ~/.android/debug.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android --out app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/app-release-unsigned.apk
          echo "✅ APK signed successfully"

      # 8. Генерация номера версии на основе коммитов
      - name: 🏷️ Generate Version Number
        id: version
        run: |
          # Версия формата: v1.0.BUILD_NUMBER
          BUILD_NUMBER=$(git rev-list --count HEAD)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION="v1.0.${BUILD_NUMBER}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "build_number=${BUILD_NUMBER}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
          echo "📊 Version: ${VERSION} (Build: ${BUILD_NUMBER}, Commit: ${COMMIT_HASH})"

      # 9. Переименование APK с версией
      - name: 📝 Rename APK with Version
        run: |
          APK_PATH="app/build/outputs/apk/release/app-release.apk"
          NEW_NAME="SpeedWorkshop-${{ steps.version.outputs.version }}-${{ steps.version.outputs.commit_hash }}.apk"
          cp "${APK_PATH}" "${NEW_NAME}"
          echo "✅ APK renamed to: ${NEW_NAME}"
          echo "APK_NAME=${NEW_NAME}" >> $GITHUB_ENV

      # 10. Проверка размера APK
      - name: 📊 Check APK Size
        run: |
          APK_SIZE=$(du -h "${APK_NAME}" | cut -f1)
          echo "📦 APK Size: ${APK_SIZE}"
          echo "APK_SIZE=${APK_SIZE}" >> $GITHUB_ENV

      # 11. Создание Release Notes
      - name: 📋 Generate Release Notes
        run: |
          cat > release_notes.md << EOF
          ## 🚀 Speed Workshop Android App - ${{ steps.version.outputs.version }}
          
          ### 📱 App Information
          - **Version:** ${{ steps.version.outputs.version }}
          - **Build:** ${{ steps.version.outputs.build_number }}
          - **Commit:** ${{ steps.version.outputs.commit_hash }}
          - **APK Size:** ${APK_SIZE}
          - **Built:** $(date '+%Y-%m-%d %H:%M:%S UTC')
          
          ### 📋 Recent Changes
          $(git log --oneline -5 --pretty=format:"- %s (%h)")
          
          ### 🔧 Technical Details
          - **Min SDK:** 24 (Android 7.0)
          - **Target SDK:** 34 (Android 14)
          - **Architecture:** Universal APK
          - **Signed with:** Debug keystore
          
          ### 📥 Installation
          1. Download the APK file below
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Enjoy the app! 🎉
          
          ---
          
          **🤖 Automatically built by GitHub Actions**
          EOF
          
          echo "✅ Release notes generated"

      # 12. Создание GitHub Release
      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "🚀 Speed Workshop ${{ steps.version.outputs.version }}"
          body_path: release_notes.md
          files: ${{ env.APK_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 13. Загрузка APK как артефакт (дополнительно)
      - name: 📤 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: speed-workshop-${{ steps.version.outputs.version }}
          path: ${{ env.APK_NAME }}
          retention-days: 30

      # 14. Итоговая информация
      - name: ✅ Build Summary
        run: |
          echo "🎉 =================================="
          echo "🚀 BUILD COMPLETED SUCCESSFULLY!"
          echo "🎉 =================================="
          echo ""
          echo "📱 App: Speed Workshop Android"
          echo "🏷️ Version: ${{ steps.version.outputs.version }}"
          echo "📦 APK: ${APK_NAME}"
          echo "📊 Size: ${APK_SIZE}"
          echo "🔗 Release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}"
          echo ""
          echo "✅ Release created and APK uploaded!"
          echo "🎉 ==================================" 